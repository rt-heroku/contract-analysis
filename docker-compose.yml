version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: doc_processing_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: document_processing
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doc_processing_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/document_processing
      JWT_SECRET: dev-jwt-secret-change-in-production
      SESSION_SECRET: dev-session-secret-change-in-production
      PORT: 5000
      CORS_ORIGIN: http://localhost:3000
      MULESOFT_API_BASE_URL: ${MULESOFT_API_BASE_URL:-https://api.mulesoft.example.com}
      MULESOFT_API_USERNAME: ${MULESOFT_API_USERNAME:-}
      MULESOFT_API_PASSWORD: ${MULESOFT_API_PASSWORD:-}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npx prisma db push && npm run seed && npm run dev"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doc_processing_frontend
    environment:
      VITE_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host

volumes:
  postgres_data:

